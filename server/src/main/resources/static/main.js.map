{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/date-selector/date-selector.component.css","webpack:///./src/app/date-selector/date-selector.component.html","webpack:///./src/app/date-selector/date-selector.component.ts","webpack:///./src/app/individuals/component/individual.component.css","webpack:///./src/app/individuals/component/individual.component.html","webpack:///./src/app/individuals/component/individual.component.ts","webpack:///./src/app/individuals/dialog/individual-dialog.component.css","webpack:///./src/app/individuals/dialog/individual-dialog.component.html","webpack:///./src/app/individuals/dialog/individual-dialog.component.ts","webpack:///./src/app/individuals/individual.ts","webpack:///./src/app/individuals/service/individual.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/nav-user-info/nav-user-info.component.css","webpack:///./src/app/nav-user-info/nav-user-info.component.html","webpack:///./src/app/nav-user-info/nav-user-info.component.ts","webpack:///./src/app/note-form/note-form.component.css","webpack:///./src/app/note-form/note-form.component.html","webpack:///./src/app/note-form/note-form.component.ts","webpack:///./src/app/shared/api.service.ts","webpack:///./src/app/shared/domain/domain-entity.ts","webpack:///./src/app/shared/domain/domain-service.ts","webpack:///./src/app/shared/domain/entity-data-source.ts","webpack:///./src/app/shared/domain/entity-deserializer-impl.ts","webpack:///./src/app/shared/domain/entity-list.ts","webpack:///./src/app/shared/domain/page-request.ts","webpack:///./src/app/staff/component/staff.component.css","webpack:///./src/app/staff/component/staff.component.html","webpack:///./src/app/staff/component/staff.component.ts","webpack:///./src/app/staff/dialog/staff-dialog.component.css","webpack:///./src/app/staff/dialog/staff-dialog.component.html","webpack:///./src/app/staff/dialog/staff-dialog.component.ts","webpack:///./src/app/staff/service/staff.service.ts","webpack:///./src/app/staff/staff.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZsD;AACE;AAEgB;AACR;AACX;AAC8B;AAClB;AAEjE,IAAM,SAAS,GAAW;IACtB,EAAE,IAAI,EAAE,OAAO,EAAM,SAAS,EAAE,qEAAc,EAAE;IAChD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,iFAAkB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE;IACrE,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+EAAc,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE;IACtE,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,+FAAmB,EAAE,WAAW,EAAE,CAAC,qDAAS,CAAC,EAAE;CACpF,CAAC;AAaF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAX5B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY,CAAC,OAAO,CAChB,SAAS,EACT,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,8BAA8B;iBACzD;aACJ;YACD,OAAO,EAAE;gBACL,4DAAY;aACf;SACJ,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC3B7B,mB;;;;;;;;;;;ACAA,iF;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IAAA;IAA4B,CAAC;IAAhB,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAAI;IAAD,mBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgC;AACsB;AACtC;AAC2H;AAC5G;AACT;AACS;AACM;AACO;AACZ;AACsB;AACX;AACY;AACG;AACU;AAC5B;AACU;AAiC3E;IAAA;IAAyB,CAAC;IAAb,SAAS;QA/BrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,0EAAe;gBACf,iFAAkB;gBAClB,qEAAc;gBACd,4FAAoB;gBACpB,iFAAiB;gBACjB,6FAAqB;gBACrB,gFAAc;gBACd,gGAAmB;gBACnB,0GAAyB;gBACzB,0FAAoB;aACrB;YACD,OAAO,EAAE;gBACP,oEAAgB;gBAChB,uEAAa;gBACb,qEAAgB;gBAChB,iEAAe;gBACf,gEAAc;gBACd,oEAAkB;gBAClB,+DAAa;gBACb,0EAAwB;gBACxB,oEAAkB;gBAClB,gEAAc;gBACd,4FAAuB;aACxB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,eAAe,EAAE,CAAC,0GAAyB,CAAC;SAC7C,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDsB;AACqD;AAC7D;AACc;AACT;AAKzC;IAEI,mBAAoB,IAAiB,EAAU,MAAc;QAAzC,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAElE,+BAAW,GAAX,UAAY,IAA4B,EAAE,KAA0B;QAApE,iBAOC;QANG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAAC,gEAAS,CAAC,kBAAQ;YACtD,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBACZ,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;YACpC,CAAC;YACD,MAAM,CAAC,+CAAE,CAAC,QAAQ,CAAC,CAAC;QACxB,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAXQ,SAAS;QAHrB,gEAAU,CAAC;YACR,UAAU,EAAE,MAAM;SACrB,CAAC;yCAG4B,8DAAW,EAAkB,sDAAM;OAFpD,SAAS,CAarB;IAAD,gBAAC;CAAA;AAbqB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTqB;AACP;AACwB;AACb;AAK/C;IAGE,qBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAC1C,IAAI,CAAC,eAAe,EAAE,CAAC;IAC3B,CAAC;IAED,qCAAe,GAAf;QACI,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CACvC,0DAAG,CAAC,kBAAQ;YACR,EAAE,CAAC,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC;gBAC5B,IAAM,OAAO,GAAG,QAAQ,CAAC,oBAAoB,CAAC,CAAC,SAAS,CAAC,CAAC;gBAC1D,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChD,YAAY,CAAC,OAAO,CAAC,WAAW,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC;gBACzD,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;gBACzD,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;gBACpD,MAAM,CAAC,IAAI,CAAC;YAChB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACJ,MAAM,CAAC,KAAK,CAAC;YACjB,CAAC;QACL,CAAC,CAAC,EACF,iEAAU,CAAC,eAAK,IAAM,MAAM,CAAC,+CAAE,CAAC,KAAK,CAAC,EAAC,CAAC,CAAC,CAC5C,CAAC;IAEN,CAAC;IAzBU,WAAW;QAHvB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAIkC,yEAAY;OAHnC,WAAW,CA2BvB;IAAD,kBAAC;CAAA;AA3BuB;;;;;;;;;;;;ACRxB,mB;;;;;;;;;;;ACAA,6XAA6X,2uCAA2uC,smC;;;;;;;;;;;;;;;;;;;;;;;;ACAhkD;AAOxC;IAEE;IAAgB,CAAC;IAFN,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,kBAAkB,CAI9B;IAAD,yBAAC;CAAA;AAJ8B;;;;;;;;;;;;ACP/B,mB;;;;;;;;;;;ACAA,oC;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,wCAAQ,GAAR;IACA,CAAC;IALU,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,qBAAqB,CAOjC;IAAD,4BAAC;CAAA;AAPiC;;;;;;;;;;;;ACPlC,sCAAsC,sBAAsB,+BAA+B,0BAA0B,yBAAyB,KAAK,oBAAoB,uBAAuB,0BAA0B,KAAK,wBAAwB,+BAA+B,KAAK,mCAAmC,qBAAqB,KAAK,C;;;;;;;;;;;ACAtV,siBAAsiB,QAAQ,sRAAsR,eAAe,yRAAyR,gBAAgB,mRAAmR,cAAc,gLAAgL,2BAA2B,uL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA9hD;AACjC;AACuB;AACrC;AACwC;AAChC;AAC6C;AACR;AACX;AAO7D;IAKE,6BAAoB,OAA0B,EAAU,MAAiB;QAArD,YAAO,GAAP,OAAO,CAAmB;QAAU,WAAM,GAAN,MAAM,CAAW;QAHzE,qBAAgB,GAAa,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IAGO,CAAC;IAK7E,sCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,kFAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,uEAAW,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,6CAAe,GAAf;QAAA,iBAKC;QAJG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,EAA5B,CAA4B,CAAC,CAAC;QACnE,kDAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC3C,IAAI,CAAC,0DAAG,CAAC,cAAK,YAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC;aAC/B,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,sCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,uEAAW,CAAC,SAAS,CAC1C,aAAa,EACb,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,4CAAc,GAAd,UAAe,GAAkC;QAAlC,gCAAsB,sDAAU,EAAE;QAC7C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6FAAyB,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;IAC7D,CAAC;IAxBwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;0DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;qDAAC;IARvB,mBAAmB;QAL/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;;;SAG5B,CAAC;yCAM6B,6EAAiB,EAAkB,2DAAS;OAL9D,mBAAmB,CAiC/B;IAAD,0BAAC;CAAA;AAjC+B;;;;;;;;;;;;ACfhC,wDAAwD,0BAA0B,KAAK,C;;;;;;;;;;;ACAvF,yPAAyP,gBAAgB,6pB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAzN;AACE;AACT;AAOzC;IAEE,mCAA4C,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAFtD,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;;;SAGlC,CAAC;QAGa,uEAAM,CAAC,iEAAe,CAAC;yCAAc,sDAAU;OAFjD,yBAAyB,CAIrC;IAAD,gCAAC;CAAA;AAJqC;;;;;;;;;;;;;;;;;;;;;;;;;;ACTsB;AAE5D;IAAgC,8BAAY;IAA5C;;IAUA,CAAC;IAJC,iCAAY,GAAZ;QACE,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IAEH,iBAAC;AAAD,CAAC,CAV+B,yEAAY,GAU3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZwC;AACA;AACwB;AAEb;AACgC;AAKpF;IAAuC,qCAAyB;IAE9D,2BAAY,GAAe;eACzB,kBAAM,GAAG,EAAE,IAAI,8FAAsB,CAAC,sDAAU,CAAC,CAAC;IACpD,CAAC;IAED,oCAAQ,GAAR;QACE,MAAM,CAAC,aAAa,CAAC;IACvB,CAAC;IARU,iBAAiB;QAH7B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGiB,8DAAU;OAFhB,iBAAiB,CAU7B;IAAD,wBAAC;CAAA,CAVsC,2EAAa,GAUnD;AAV6B;;;;;;;;;;;;ACV9B,+BAA+B,iBAAiB,EAAE,C;;;;;;;;;;;ACAlD,0f;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,iCAAQ,GAAR;IACA,CAAC;IALU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;;OACW,cAAc,CAO1B;IAAD,qBAAC;CAAA;AAP0B;;;;;;;;;;;;ACP3B,mB;;;;;;;;;;;ACAA,w+D;;;;;;;;;;;;;;;;;;;;;;;;;ACAgD;AACT;AAOvC;IAIE,yBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;QAFlC,SAAI,GAAW,MAAM,CAAC;IAEgB,CAAC;IAEvC,kCAAQ,GAAR;IACA,CAAC;IAED,gCAAM,GAAN;IAEA,CAAC;IAXU,eAAe;QAL3B,+DAAS,CAAC;YACP,QAAQ,EAAE,aAAa;;;SAG1B,CAAC;yCAK4B,sDAAM;OAJvB,eAAe,CAa3B;IAAD,sBAAC;CAAA;AAb2B;;;;;;;;;;;;ACR5B,mB;;;;;;;;;;;ACAA,sD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,uCAAQ,GAAR;IACA,CAAC;IALU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;;;SAG9B,CAAC;;OACW,oBAAoB,CAOhC;IAAD,2BAAC;CAAA;AAPgC;;;;;;;;;;;;ACPjC,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;ACPW;AACoB;AAS7D;IAIE,oBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAChC,IAAI,OAAO,GAAG,IAAI,gEAAW,EAAE,CAAC;QAChC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,eAAe,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,GAAG,EAAC,OAAO,EAAE,OAAO,EAAC,CAAC;IACnC,CAAC;IAED,2BAAM,GAAN,UAA+B,MAAS;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAI,OAAO,GAAG,MAAM,CAAC,YAAY,EAAE,EAAE,MAAM,CAAC,CAAC;IACpE,CAAC;IAED,2BAAM,GAAN,UAA+B,MAAS;QACtC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,2BAAM,GAAN,UAA+B,MAAS;QACtC,MAAM,CAAC,MAAM,EAAE,CAAC;QAChB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;IACrD,CAAC;IAED,yBAAI,GAAJ,UAAqD,GAA6B;QAChF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,GAAG,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,2BAAM,GAAN,UAAuD,GAA6B;QAClF,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,4BAAO,GAAP,UAAQ,QAAgB,EAAE,EAAU;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAQ,QAAQ,SAAI,EAAI,EAAC,QAAQ,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED,2BAAM,GAAN,UAAO,WAAwB;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,WAAW,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;IACrF,CAAC;IArCU,UAAU;QAHtB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAK0B,+DAAU;OAJzB,UAAU,CAuCtB;IAAD,iBAAC;CAAA;AAvCsB;;;;;;;;;;;;;;ACVvB;AAAA;IAAA;IAyBA,CAAC;IAjBG,+BAAQ,GAAR;QACE,EAAE,EAAC,IAAI,CAAC,MAAM,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC;YACtD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;QACrC,CAAC;QACD,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,EAAE,GAAG,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC;IACvD,CAAC;IAED,6BAAM,GAAN;QACE,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAED,kCAAW,GAAX;QACE,MAAM,CAAC,QAAQ,CAAC;IAClB,CAAC;IAIL,mBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACnBkC;AAGnC;IAEE,uBAA8B,GAAe,EAAU,YAAmC;QAA5D,QAAG,GAAH,GAAG,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAuB;IAAG,CAAC;IAI9F,+BAAO,GAAP,UAAQ,EAAU;QAAlB,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,GAAG;aACV,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC;aAC5B,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,YAAI,CAAC,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,EAAnC,CAAmC,CAAC,CAAC,CAAC;IAC9D,CAAC;IAED,8BAAM,GAAN,UAAO,WAAwB;QAA/B,iBAIC;QAHC,MAAM,CAAC,IAAI,CAAC,GAAG;aACV,MAAM,CAAC,WAAW,CAAC;aACnB,IAAI,CAAC,0DAAG,CAAC,cAAI,IAAI,YAAI,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,EAAvC,CAAuC,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,8BAAM,GAAN,UAAO,MAAS;QACd,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,8BAAM,GAAN,UAAO,MAAS;QACd,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAED,8BAAM,GAAN,UAAO,MAAS;QACd,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC1B,CAAC;IAEH,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACnCgD;AAGjD;IAKI,0BAAoB,OAAU;QAAV,YAAO,GAAP,OAAO,CAAG;QAHtB,YAAO,GAAG,IAAI,oDAAe,CAAM,EAAE,CAAC,CAAC;QACvC,YAAO,GAAG,IAAI,oDAAe,CAAU,KAAK,CAAC,CAAC;IAErB,CAAC;IAAA,CAAC;IAEnC,kCAAO,GAAP,UAAQ,gBAAkC;QACtC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACvC,CAAC;IAED,qCAAU,GAAV,UAAW,gBAAkC;QACzC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC5B,CAAC;IAED,mCAAQ,GAAR,UAAS,WAAwB;QAAjC,iBAMC;QALG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,SAAS,CACtC,kBAAQ,IAAI,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC,EAAxC,CAAwC,EACpD,aAAG,IAAI,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAArB,CAAqB,EAC5B,cAAM,YAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAxB,CAAwB,CAAC,CAAC;IACxC,CAAC;IAEL,uBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AC7BwC;AAEzC;IAEI,gCAAoB,UAAuB;QAAvB,eAAU,GAAV,UAAU,CAAa;IAAG,CAAC;IAE/C,4CAAW,GAAX,UAAY,IAAS;QACjB,IAAI,MAAM,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;QACnC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAC5B,MAAM,CAAC,MAAM,CAAC;IAClB,CAAC;IAED,gDAAe,GAAf,UAAgB,IAAS;QAAzB,iBAOC;QANG,IAAI,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC;QAC9B,IAAI,QAAQ,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAU,CAAC;QAC3D,MAAM,CAAC,IAAI,uDAAU,CACjB,QAAQ,CAAC,GAAG,CAAC,kBAAQ,IAAI,YAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,EAA1B,CAA0B,CAAC,EACpD,IAAI,CAAC,MAAM,EACX,IAAI,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC;IAIL,6BAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACtBD;AAAA;IAII,oBACY,SAAc,EACd,MAAc,EACtB,IAAU;QAFF,cAAS,GAAT,SAAS,CAAK;QACd,WAAM,GAAN,MAAM,CAAQ;QAEtB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED,+BAAU,GAAV;QACI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,0BAAK,GAAL;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,yBAAI,GAAJ;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,yBAAI,GAAJ;QACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAEL,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AC9B+C;AAGhD;IAEE,qBACU,QAAgB,EAChB,IAAY,EACZ,IAAY,EACZ,IAAY;QAHZ,aAAQ,GAAR,QAAQ,CAAQ;QAChB,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;QACZ,SAAI,GAAJ,IAAI,CAAQ;IAAG,CAAC;IAE1B,4BAAM,GAAN;QACE,MAAM,CAAC,WAAQ,IAAI,CAAC,QAAU,EAAC,QAAQ,EAAE,CAAC;IAC5C,CAAC;IAED,kCAAY,GAAZ;QACI,MAAM,CAAC,IAAI,+DAAU,EAAE;aAClB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;aACtB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC;aACtB,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAEQ,qBAAS,GAAhB,UAAiB,SAAc;QAC3B,EAAE,EAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;YACpC,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QACD,MAAM,CAAC,EAAE,GAAG,CAAC,SAAS,CAAC,KAAK,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;IACrD,CAAC;IAEM,qBAAS,GAAhB,UAAiB,SAAc;QAC3B,EAAE,EAAC,CAAC,SAAS,CAAC,KAAK,IAAI,SAAS,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC;YAC3C,SAAS,CAAC,KAAK,GAAG,CAAC,EAAC,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,KAAK,EAAC,CAAC,CAAC;QAChD,CAAC;QACD,IAAI,MAAM,GAAG,SAAS,CAAC,KAAiB,CAAC;QACzC,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,IAAI,GAAG,SAAS,CAAC,OAAmB,CAAC;QACzC,MAAM,CAAC,CAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAW,CAAC,CAAC,MAAM,CAAC,SAAI,CAAC,CAAC,KAAK,CAAG,EAAC,QAAQ,EAAE,CAAC;IAC3E,CAAC;IAEM,qBAAS,GAAhB,UAAiB,SAAc;QAC3B,MAAM,CAAC,EAAE,GAAG,SAAS,CAAC,MAAM,CAAC;IACjC,CAAC;IAEI,qBAAS,GAAhB,UAAiB,QAAgB,EAAE,SAAuB,EAAE,IAAU;QACpE,MAAM,CAAC,IAAI,WAAW,CAClB,QAAQ,EACR,KAAG,SAAS,CAAC,SAAW,EACxB,KAAG,SAAS,CAAC,QAAU,EACpB,IAAI,CAAC,MAAM,SAAI,IAAI,CAAC,SAAW,CAAC,CAAC;IAC1C,CAAC;IAEM,mBAAO,GAAd,UAAe,QAAgB;QAC7B,MAAM,CAAC,IAAI,WAAW,CAAC,QAAQ,EAAE,GAAG,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;IACxD,CAAC;IAEH,kBAAC;AAAD,CAAC;;;;;;;;;;;;;ACvDD,mB;;;;;;;;;;;ACAA,giBAAgiB,QAAQ,4RAA4R,gBAAgB,wRAAwR,eAAe,yRAAyR,gBAAgB,mRAAmR,cAAc,0QAA0Q,WAAW,gLAAgL,2BAA2B,kL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA1mE;AACnC;AACI;AACD;AAC6C;AACzC;AACuB;AACa;AACN;AAC1B;AACmC;AAOtE;IAKI,wBAAoB,OAAqB,EAAU,MAAiB;QAAhD,YAAO,GAAP,OAAO,CAAc;QAAU,WAAM,GAAN,MAAM,CAAW;QAHpE,qBAAgB,GAAa,CAAC,YAAY,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IAGP,CAAC;IAKxE,iCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,GAAG,IAAI,kFAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,uEAAW,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;IAC3D,CAAC;IAED,wCAAe,GAAf;QAAA,iBAKC;QAJG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,cAAM,YAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,EAA5B,CAA4B,CAAC,CAAC;QACnE,kDAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC3C,IAAI,CAAC,0DAAG,CAAC,cAAK,YAAI,CAAC,QAAQ,EAAE,EAAf,CAAe,CAAC,CAAC;aAC/B,SAAS,EAAE,CAAC;IACrB,CAAC;IAED,iCAAQ,GAAR;QACI,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,uEAAW,CAAC,SAAS,CAC1C,OAAO,EACP,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACpB,CAAC;IAED,kCAAS,GAAT,UAAU,GAAwB;QAAxB,gCAAiB,4CAAK,EAAE;QAC9B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oFAAoB,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC,CAAC;IACxD,CAAC;IAxBwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;kCAAY,8DAAY;qDAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;kCAAO,yDAAO;gDAAC;IARzB,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAM+B,mEAAY,EAAkB,2DAAS;OAL3D,cAAc,CAiC1B;IAAD,qBAAC;CAAA;AAjC0B;;;;;;;;;;;;ACjB3B,wDAAwD,0BAA0B,KAAK,C;;;;;;;;;;;ACAvF,oPAAoP,gBAAgB,qpB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApN;AACE;AACnB;AAO/B;IAEI,8BAA4C,IAAW;QAAX,SAAI,GAAJ,IAAI,CAAO;IAAI,CAAC;IAFnD,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;QAGe,uEAAM,CAAC,iEAAe,CAAC;yCAAc,4CAAK;OAF9C,oBAAoB,CAIhC;IAAD,2BAAC;CAAA;AAJgC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACsB;AAClC;AAEqB;AACgC;AAKpF;IAAkC,gCAAoB;IAEpD,sBAAY,GAAe;eACzB,kBAAM,GAAG,EAAE,IAAI,8FAAsB,CAAC,4CAAK,CAAC,CAAC;IAC/C,CAAC;IAED,+BAAQ,GAAR;QACE,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IARU,YAAY;QAHxB,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAGiB,8DAAU;OAFhB,YAAY,CAYxB;IAAD,mBAAC;CAAA,CAZiC,2EAAa,GAY9C;AAZwB;;;;;;;;;;;;;;;;;;;;;;;;;;ACVmC;AAE5D;IAA2B,yBAAY;IAAvC;;IAWA,CAAC;IAJG,4BAAY,GAAZ;QACI,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC;IAEL,YAAC;AAAD,CAAC,CAX0B,yEAAY,GAWtC;;;;;;;;;;;;;;;;ACbM,IAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,OAAO,EAAE,MAAM;CAClB,CAAC;;;;;;;;;;;;;;;;;;ACH6C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }              from '@angular/core';\r\nimport { RouterModule, Routes }  from '@angular/router';\r\n\r\nimport { DashboardComponent }    from \"./dashboard/dashboard.component\";\r\nimport { LoginComponent }        from \"./login/login.component\";\r\nimport { AuthGuard }             from \"./auth.guard\";\r\nimport { IndividualComponent } from \"./individuals/component/individual.component\";\r\nimport {StaffComponent} from \"./staff/component/staff.component\";\r\n\r\nconst appRoutes: Routes = [\r\n    { path: 'login',     component: LoginComponent },\r\n    { path: '', component: DashboardComponent, canActivate: [AuthGuard] },\r\n    { path: 'staff', component: StaffComponent, canActivate: [AuthGuard] },\r\n    { path: 'individuals', component: IndividualComponent, canActivate: [AuthGuard] },\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            appRoutes,\r\n            { enableTracing: true } // <-- debugging purposes only\r\n        )\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {}","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent { }\n","import { BrowserModule} from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { MatDialogModule, MatTableModule, MatPaginatorModule, MatSortModule, MatProgressSpinnerModule, MatFormFieldModule, MatInputModule } from '@angular/material'\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { LoginComponent } from './login/login.component';\nimport { NavUserInfoComponent } from './nav-user-info/nav-user-info.component';\nimport { NoteFormComponent } from './note-form/note-form.component';\nimport { DateSelectorComponent } from './date-selector/date-selector.component';\nimport { IndividualComponent } from './individuals/component/individual.component';\nimport { IndividualDialogComponent } from './individuals/dialog/individual-dialog.component';\nimport {StaffComponent} from \"./staff/component/staff.component\";\nimport {StaffDialogComponent} from \"./staff/dialog/staff-dialog.component\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavBarComponent,\n    DashboardComponent,\n    LoginComponent,\n    NavUserInfoComponent,\n    NoteFormComponent,\n    DateSelectorComponent,\n    StaffComponent,\n    IndividualComponent,\n    IndividualDialogComponent,\n    StaffDialogComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    HttpClientModule,\n    MatDialogModule,\n    MatTableModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatProgressSpinnerModule,\n    MatFormFieldModule,\n    MatInputModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n  entryComponents: [IndividualDialogComponent]\n})\nexport class AppModule { }\n","import { Injectable }  from '@angular/core';\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router} from '@angular/router';\nimport {Observable, of} from 'rxjs';\nimport { AuthService } from \"./auth/auth.service\";\nimport {concatMap} from \"rxjs/operators\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n    constructor(private auth: AuthService, private router: Router) { }\n\n    canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n        return this.auth.isAuthenticated().pipe(concatMap(loggedIn => {\n            if (!loggedIn) {\n                this.router.navigate(['/login'])\n            }\n            return of(loggedIn);\n        }));\n    }\n\n}","import { Injectable } from '@angular/core';\nimport {Observable, of} from \"rxjs\";\nimport {StaffService} from \"../staff/service/staff.service\";\nimport {catchError, map} from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  constructor(private staffService: StaffService) {\n      this.isAuthenticated();\n  }\n\n  isAuthenticated(): Observable<boolean> {\n      // return of(true);\n      return this.staffService.findOne('me').pipe(\n          map(response => {\n              if (response['authenticated']) {\n                  const details = response['userAuthentication']['details'];\n                  localStorage.setItem('email', details['email']);\n                  localStorage.setItem('firstName', details['given_name']);\n                  localStorage.setItem('lastName', details['family_name']);\n                  localStorage.setItem('picture', details['picture']);\n                  return true;\n              } else {\n                  return false;\n              }\n          }),\n          catchError(error => { return of(false) })\n      );\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"d-flex justify-content-center\\\" style=\\\"margin-top: 4em\\\">\\n    <app-date-selector></app-date-selector>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\" style=\\\"margin-top: 4em\\\">\\n    <div class=\\\"row\\\">\\n        <ul class=\\\"pagination\\\">\\n            <li class=\\\"page-item disabled\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">&laquo;</a>\\n            </li>\\n            <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link active\\\" data-toggle=\\\"tab\\\" href=\\\"#sunday\\\">Sun</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#monday\\\">Mon</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#tuesday\\\">Tue</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#wednesday\\\">Wed</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#thursday\\\">Thu</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#friday\\\">Fri</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#saturday\\\">Sat</a>\\n                </li>\\n            </ul>\\n            <li class=\\\"page-item\\\">\\n                <a class=\\\"page-link\\\" href=\\\"#\\\">&raquo;</a>\\n            </li>\\n        </ul>\\n    </div>\\n</div>\\n<div class=\\\"d-flex justify-content-center\\\">\\n    <div class=\\\"row\\\">\\n        <div id=\\\"myTabContent\\\" class=\\\"tab-content\\\">\\n            <div class=\\\"tab-pane fade active show\\\" id=\\\"sunday\\\">\\n                <app-note-form></app-note-form>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"monday\\\">\\n                <app-note-form></app-note-form>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"tuesday\\\">\\n                <app-note-form></app-note-form>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"wednesday\\\">\\n                <app-note-form></app-note-form>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"thursday\\\">\\n                <app-note-form></app-note-form>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"friday\\\">\\n                <app-note-form></app-note-form>\\n            </div>\\n            <div class=\\\"tab-pane fade\\\" id=\\\"saturday\\\">\\n                <app-note-form></app-note-form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n\n  constructor() { }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>\\n  \\n</h1>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-date-selector',\n  templateUrl: './date-selector.component.html',\n  styleUrls: ['./date-selector.component.css']\n})\nexport class DateSelectorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".example-container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    max-height: 500px;\\r\\n    min-width: 300px;\\r\\n}\\r\\n\\r\\n.mat-table {\\r\\n    overflow: auto;\\r\\n    max-height: 500px;\\r\\n}\\r\\n\\r\\n.mat-row:hover {\\r\\n    background-color: pink;\\r\\n}\\r\\n\\r\\nth.mat-sort-header-sorted {\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <h1 class=\\\"mat-display-3\\\">Individuals</h1>\\n    <div class=\\\"spinner-container\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- Hidden id Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef> Id </th>\\n                <td mat-cell *matCellDef=\\\"let ind\\\"> {{ind.id}} </td>\\n            </ng-container>\\n\\n            <!-- firstName Column -->\\n            <ng-container matColumnDef=\\\"firstName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\\n                <td mat-cell *matCellDef=\\\"let ind\\\"> {{ind.firstName}} </td>\\n            </ng-container>\\n\\n            <!-- middleName Column -->\\n            <ng-container matColumnDef=\\\"middleName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Middle Name </th>\\n                <td mat-cell *matCellDef=\\\"let ind\\\"> {{ind.middleName}} </td>\\n            </ng-container>\\n\\n            <!-- lastName Column -->\\n            <ng-container matColumnDef=\\\"lastName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\n                <td mat-cell *matCellDef=\\\"let ind\\\"> {{ind.lastName}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row class=\\\"hover\\\" *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"loadIndividual(row)\\\"></tr>\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n</div>\\n\\n\"","import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {Individual} from \"../individual\";\nimport {IndividualService} from \"../service/individual.service\";\nimport {merge} from \"rxjs\";\nimport {MatDialog, MatPaginator, MatSort} from \"@angular/material\";\nimport {tap} from \"rxjs/operators\";\nimport {IndividualDialogComponent} from \"../dialog/individual-dialog.component\";\nimport {EntityDataSource} from \"../../shared/domain/entity-data-source\";\nimport {PageRequest} from \"../../shared/domain/page-request\";\n\n@Component({\n  selector: 'app-individuals',\n  templateUrl: './individual.component.html',\n  styleUrls: ['./individual.component.css']\n})\nexport class IndividualComponent implements AfterViewInit, OnInit {\n\n  displayedColumns: string[] = ['firstName', 'middleName', 'lastName'];\n  dataSource: EntityDataSource<Individual, IndividualService>;\n\n  constructor(private service: IndividualService, private dialog: MatDialog) {}\n\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  ngOnInit() {\n      this.dataSource = new EntityDataSource(this.service);\n      this.dataSource.loadData(PageRequest.default('individuals'));\n  }\n\n  ngAfterViewInit() {\n      this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n      merge(this.sort.sortChange, this.paginator.page)\n          .pipe(tap(()=> this.loadData()))\n          .subscribe();\n  }\n\n  loadData() {\n      this.dataSource.loadData(PageRequest.fromTable(\n          'individuals',\n          this.paginator,\n          this.sort));\n  }\n\n  loadIndividual(row: Individual = new Individual()) {\n      this.dialog.open(IndividualDialogComponent, {data: row});\n  }\n\n}\n","module.exports = \".button-row button,\\r\\n.button-row a {\\r\\n    margin-right: 8px;\\r\\n}\"","module.exports = \"<h1 mat-dialog-title>Create/Update Individual</h1>\\n<mat-dialog-content>\\n    <mat-form-field [floatLabel]=\\\"auto\\\">\\n        <mat-label>First Name</mat-label>\\n        <input matInput placeholder=\\\"First Name\\\" required value=\\\"{{data.firstName}}\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field [floatLabel]=\\\"auto\\\">\\n        <mat-label>Middle Name</mat-label>\\n        <input matInput placeholder=\\\"Middle Name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field [floatLabel]=\\\"auto\\\">\\n        <mat-label>Last Name</mat-label>\\n        <input matInput placeholder=\\\"Last Name\\\" required>\\n    </mat-form-field>\\n</mat-dialog-content>\\n<div class=\\\"button-row\\\">\\n    <mat-dialog-actions align=\\\"end\\\">\\n        <button mat-flat-button mat-dialog-close>Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Save</button>\\n    </mat-dialog-actions>\\n</div>\"","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material\";\nimport {Individual} from \"../individual\";\n\n@Component({\n  selector: 'app-individual-dialog',\n  templateUrl: './individual-dialog.component.html',\n  styleUrls: ['./individual-dialog.component.css']\n})\nexport class IndividualDialogComponent {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: Individual) { }\n\n}\n","import {DomainEntity} from \"../shared/domain/domain-entity\";\n\nexport class Individual extends DomainEntity {\n\n  firstName: string;\n  middleName: string;\n  lastName: string;\n\n  resourceName(): string {\n    return \"individuals\";\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Individual} from \"../individual\";\nimport {DomainService} from \"../../shared/domain/domain-service\";\nimport {IDomainService} from \"../../shared/domain/idomain-service\";\nimport {ApiService} from \"../../shared/api.service\";\nimport {EntityDeserializerImpl} from \"../../shared/domain/entity-deserializer-impl\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IndividualService extends DomainService<Individual> implements IDomainService<Individual> {\n\n  constructor(api: ApiService) {\n    super(api, new EntityDeserializerImpl(Individual));\n  }\n\n  resource(): string {\n    return \"individuals\";\n  }\n\n}\n","module.exports = \".top-buffer { margin-top:40px; }\"","module.exports = \"<div class=\\\"container top-buffer\\\">\\n    <div class=\\\"card border-primary mb-3\\\">\\n        <div class=\\\"card-header\\\"><img src=\\\"assets/img/nycfss-logo.gif\\\" class=\\\"img-fluid\\\"></div>\\n        <div class=\\\"card-body\\\">\\n            <h4 class=\\\"card-title\\\">NY CFSS Staff Login</h4>\\n            <a class=\\\"btn btn-social btn-google\\\" href=\\\"/google/login\\\">\\n                <span class=\\\"fa fa-google\\\"></span> Sign in with Google\\n            </a>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"navbar navbar-expand-lg navbar-dark bg-dark\\\">\\n    <div class=\\\"container\\\">\\n        <a href=\\\"#\\\" routerLink=\\\"#\\\" class=\\\"navbar-brand\\\">NYCFSS</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarResponsive\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/staff\\\" routerLinkActive=\\\"active\\\">Staff</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/individuals\\\" routerLinkActive=\\\"active\\\">Individuals</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/notes\\\" routerLinkActive=\\\"active\\\">Notes</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" routerLink=\\\"/refData\\\" routerLinkActive=\\\"active\\\">RefData</a>\\n                </li>\\n            </ul>\\n\\n            <ul class=\\\"nav navbar-nav ml-auto\\\">\\n                <li class=\\\"nav-item dropdown\\\">\\n                    <a class=\\\"nav-link dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" routerLink=\\\"#\\\" routerLinkActive=\\\"active\\\" id=\\\"nav-profile\\\">Hello, User <span class=\\\"caret\\\"></span></a>\\n                    <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"nav-profile\\\">\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/profile\\\">Profile</a>\\n                        <a class=\\\"dropdown-item\\\" href=\\\"#\\\" routerLink=\\\"/logout\\\">Logout</a>\\n                    </div>\\n                </li>\\n            </ul>\\n\\n        </div>\\n    </div>\\n</div>\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-nav-bar',\n    templateUrl: './nav-bar.component.html',\n    styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  user: string = 'User';\n\n  constructor(private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout() {\n\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  nav-user-info works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-user-info',\n  templateUrl: './nav-user-info.component.html',\n  styleUrls: ['./nav-user-info.component.css']\n})\nexport class NavUserInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  note-form works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-note-form',\n  templateUrl: './note-form.component.html',\n  styleUrls: ['./note-form.component.css']\n})\nexport class NoteFormComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {DomainEntity} from \"./domain/domain-entity\";\nimport {EntityRelationship} from \"./domain/entity-relationship\";\nimport {PageRequest} from \"./domain/page-request\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  opts: Object;\n\n  constructor(private http: HttpClient) {\n      let headers = new HttpHeaders();\n      headers.set('Content-Type', 'text/uri-list');\n      this.opts = {headers: headers};\n  }\n\n  create<T extends DomainEntity>(entity: T): Observable<T> {\n    return this.http.post<T>('/api/' + entity.resourceName(), entity);\n  }\n\n  update<T extends DomainEntity>(entity: T): Observable<T> {\n    return this.http.put<T>(entity.location(), entity);\n  }\n\n  delete<T extends DomainEntity>(entity: T): Observable<T> {\n    entity.delete();\n    return this.http.put<T>(entity.location(), entity);\n  }\n\n  link<P extends DomainEntity, C extends DomainEntity>(rel: EntityRelationship<P, C>): Observable<any> {\n    return this.http.put(rel.parentLoc(), rel.toBody(), this.opts);\n  }\n\n  unlink<P extends DomainEntity, C extends DomainEntity>(rel: EntityRelationship<P, C>): Observable<any> {\n    return this.http.delete(rel.deletePath(), this.opts);\n  }\n\n  findOne(resource: string, id: string): Observable<any> {\n    return this.http.get(`/api/${resource}/${id}`.toString());\n  }\n\n  search(pageRequest: PageRequest): Observable<any> {\n    return this.http.get(pageRequest.getUrl(), { params: pageRequest.toHttpParams() });\n  }\n\n}\n","export abstract class DomainEntity {\n\n    id: string;\n    creTimest: string;\n    modTimest: string;\n    active: boolean;\n    _links: Object;\n\n    location(): string {\n      if(this._links != null && this._links['self'] != null) {\n        return this._links['self']['href'];\n      }\n      return '/api/' + this.resourceName() + '/' + this.id;\n    }\n\n    delete(): void {\n      this.active = false;\n    }\n\n    defaultSort(): string {\n      return 'id,asc';\n    }\n\n    abstract resourceName(): string;\n\n}\n","import {DomainEntity} from \"./domain-entity\";\nimport {IDomainService} from \"./idomain-service\";\nimport {Observable} from \"rxjs\";\nimport {PageRequest} from \"./page-request\";\nimport {EntityList} from \"./entity-list\";\nimport {EntityDeserializer} from \"./entity-deserializer\";\nimport {map} from \"rxjs/operators\";\nimport {ApiService} from \"../api.service\";\n\nexport abstract class DomainService<T extends DomainEntity> implements IDomainService<T> {\n\n  protected constructor(private api: ApiService, private deserializer: EntityDeserializer<T>) {}\n\n  abstract resource(): string;\n\n  findOne(id: string): Observable<T> {\n    return this.api\n        .findOne(this.resource(), id)\n        .pipe(map(resp => this.deserializer.deserialize(resp)));\n  }\n\n  search(pageRequest: PageRequest): Observable<EntityList<T>> {\n    return this.api\n        .search(pageRequest)\n        .pipe(map(resp => this.deserializer.deserializeList(resp)));\n  }\n\n  create(entity: T): Observable<T> {\n    return this.api.create(entity);\n  }\n\n  update(entity: T): Observable<T> {\n    return this.api.update(entity);\n  }\n\n  delete(entity: T): void {\n    this.api.delete(entity);\n  }\n\n}\n","import {DataSource} from \"@angular/cdk/table\";\nimport {DomainEntity} from \"./domain-entity\";\nimport {DomainService} from \"./domain-service\";\nimport {CollectionViewer} from \"@angular/cdk/collections\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {PageRequest} from \"./page-request\";\n\nexport class EntityDataSource<E extends DomainEntity, S extends DomainService<E>> implements DataSource<E> {\n\n    private subject = new BehaviorSubject<E[]>([]);\n    private loading = new BehaviorSubject<boolean>(false);\n\n    constructor(private service: S) {};\n\n    connect(collectionViewer: CollectionViewer): Observable<E[]> {\n        return this.subject.asObservable();\n    }\n\n    disconnect(collectionViewer: CollectionViewer): void {\n        this.subject.complete();\n        this.loading.complete();\n    }\n\n    loadData(pageRequest: PageRequest) {\n        this.loading.next(true);\n        this.service.search(pageRequest).subscribe(\n            response => this.subject.next(response.entityList()),\n            err => this.subject.next([]),\n            () => this.loading.next(false));\n    }\n\n}\n","import {DomainEntity} from \"./domain-entity\";\nimport {EntityDeserializer} from \"./entity-deserializer\";\nimport {EntityList} from \"./entity-list\";\n\nexport class EntityDeserializerImpl<T extends DomainEntity> implements EntityDeserializer<T> {\n\n    constructor(private EntityType: new () => T) {}\n\n    deserialize(json: any): T {\n        let entity = new this.EntityType();\n        Object.assign(entity, json);\n        return entity;\n    }\n\n    deserializeList(json: any): EntityList<T> {\n        let embedded = json._embedded;\n        let jsonList = embedded[Object.keys(embedded)[0]] as any[];\n        return new EntityList<T>(\n            jsonList.map(jsonItem => this.deserialize(jsonItem)),\n            json._links,\n            json.page);\n    }\n\n\n\n}\n","import {DomainEntity} from \"./domain-entity\";\nimport {Page} from \"./page\";\n\nexport class EntityList<T extends DomainEntity> {\n\n    page: Page;\n\n    constructor(\n        private _embedded: T[],\n        private _links: Object,\n        page: Page) {\n        this.page = page;\n    }\n\n    entityList(): T[] {\n        return this._embedded;\n    }\n\n    links(): any {\n        return this._links;\n    }\n\n    next(): string {\n        return this._links['next']['href'];\n    }\n\n    prev(): string {\n        return this._links['prev']['href'];\n    }\n\n}\n","import {HttpParams} from \"@angular/common/http\";\nimport {MatPaginator, Sort} from \"@angular/material\";\n\nexport class PageRequest {\n\n  constructor(\n    private resource: string,\n    private page: string,\n    private size: string,\n    private sort: string) {}\n\n  getUrl(): string {\n    return `/api/${this.resource}`.toString();\n  }\n\n  toHttpParams(): HttpParams {\n      return new HttpParams()\n          .set('page', this.page)\n          .set('size', this.size)\n          .set('sort', this.sort);\n  }\n\n    static parsePage(dtOptions: any): string {\n        if(dtOptions.start < dtOptions.length) {\n            return \"0\";\n        }\n        return \"\" + (dtOptions.start / dtOptions.length);\n    }\n\n    static parseSort(dtOptions: any): string {\n        if(!dtOptions.order || dtOptions.order == []) {\n            dtOptions.order = [{column: 0, dir: 'asc'}];\n        }\n        let orders = dtOptions.order as Object[];\n        let o = orders[0];\n        let cols = dtOptions.columns as Object[];\n        return `${cols[o['column'] as number]['name']},${o['dir']}`.toString();\n    }\n\n    static parseSize(dtOptions: any): string {\n        return \"\" + dtOptions.length;\n    }\n\n  static fromTable(resource: string, paginator: MatPaginator, sort: Sort): PageRequest {\n    return new PageRequest(\n        resource,\n        `${paginator.pageIndex}`,\n        `${paginator.pageSize}`,\n        `${sort.active},${sort.direction}`);\n  }\n\n  static default(resource: string): PageRequest {\n    return new PageRequest(resource, '0', '25', 'id,asc');\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n    <h1 class=\\\"mat-display-3\\\">Staff</h1>\\n    <div class=\\\"spinner-container\\\" *ngIf=\\\"dataSource.loading$ | async\\\">\\n        <mat-spinner></mat-spinner>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- Hidden id Column -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <th mat-header-cell *matHeaderCellDef> Id </th>\\n                <td mat-cell *matCellDef=\\\"let stf\\\"> {{stf.id}} </td>\\n            </ng-container>\\n\\n            <!-- pictureUrl Column -->\\n            <ng-container matColumnDef=\\\"pictureUrl\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Icon </th>\\n                <td mat-cell *matCellDef=\\\"let stf\\\"><img src=\\\"{{stf.pictureUrl}}\\\"></td>\\n            </ng-container>\\n\\n            <!-- firstName Column -->\\n            <ng-container matColumnDef=\\\"firstName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> First Name </th>\\n                <td mat-cell *matCellDef=\\\"let stf\\\"> {{stf.firstName}} </td>\\n            </ng-container>\\n\\n            <!-- middleName Column -->\\n            <ng-container matColumnDef=\\\"middleName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Middle Name </th>\\n                <td mat-cell *matCellDef=\\\"let stf\\\"> {{stf.middleName}} </td>\\n            </ng-container>\\n\\n            <!-- lastName Column -->\\n            <ng-container matColumnDef=\\\"lastName\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Name </th>\\n                <td mat-cell *matCellDef=\\\"let stf\\\"> {{stf.lastName}} </td>\\n            </ng-container>\\n\\n            <!-- email Column -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> E-mail </th>\\n                <td mat-cell *matCellDef=\\\"let stf\\\"> {{stf.email}} </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row class=\\\"hover\\\" *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"loadStaff(row)\\\"></tr>\\n        </table>\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[25, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\n    </div>\\n</div>\\n\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport 'datatables.net';\nimport 'datatables.net-bs4';\nimport {merge} from \"rxjs\";\nimport {EntityDataSource} from \"../../shared/domain/entity-data-source\";\nimport {Staff} from \"../staff\";\nimport {StaffService} from \"../service/staff.service\";\nimport {MatDialog, MatPaginator, MatSort} from \"@angular/material\";\nimport {PageRequest} from \"../../shared/domain/page-request\";\nimport {tap} from \"rxjs/operators\";\nimport {StaffDialogComponent} from \"../dialog/staff-dialog.component\";\n\n@Component({\n  selector: 'app-staff',\n  templateUrl: './staff.component.html',\n  styleUrls: ['./staff.component.css']\n})\nexport class StaffComponent implements OnInit {\n\n    displayedColumns: string[] = ['pictureUrl', 'firstName', 'lastName', 'email'];\n    dataSource: EntityDataSource<Staff, StaffService>;\n\n    constructor(private service: StaffService, private dialog: MatDialog) {}\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    ngOnInit() {\n        this.dataSource = new EntityDataSource(this.service);\n        this.dataSource.loadData(PageRequest.default('staff'));\n    }\n\n    ngAfterViewInit() {\n        this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n        merge(this.sort.sortChange, this.paginator.page)\n            .pipe(tap(()=> this.loadData()))\n            .subscribe();\n    }\n\n    loadData() {\n        this.dataSource.loadData(PageRequest.fromTable(\n            'staff',\n            this.paginator,\n            this.sort));\n    }\n\n    loadStaff(row: Staff = new Staff()) {\n        this.dialog.open(StaffDialogComponent, {data: row});\n    }\n\n}\n","module.exports = \".button-row button,\\r\\n.button-row a {\\r\\n    margin-right: 8px;\\r\\n}\"","module.exports = \"<h1 mat-dialog-title>Create/Update Staff</h1>\\n<mat-dialog-content>\\n    <mat-form-field [floatLabel]=\\\"auto\\\">\\n        <mat-label>First Name</mat-label>\\n        <input matInput placeholder=\\\"First Name\\\" required value=\\\"{{data.firstName}}\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field [floatLabel]=\\\"auto\\\">\\n        <mat-label>Last Name</mat-label>\\n        <input matInput placeholder=\\\"Last Name\\\" required>\\n    </mat-form-field>\\n\\n    <mat-form-field [floatLabel]=\\\"auto\\\">\\n        <mat-label>E-mail</mat-label>\\n        <input matInput placeholder=\\\"E-mail\\\">\\n    </mat-form-field>\\n\\n</mat-dialog-content>\\n<div class=\\\"button-row\\\">\\n    <mat-dialog-actions align=\\\"end\\\">\\n        <button mat-flat-button mat-dialog-close>Cancel</button>\\n        <button mat-raised-button color=\\\"primary\\\" [mat-dialog-close]=\\\"true\\\" cdkFocusInitial>Save</button>\\n    </mat-dialog-actions>\\n</div>\"","import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA} from \"@angular/material\";\nimport {Staff} from \"../staff\";\n\n@Component({\n  selector: 'app-staff-dialog',\n  templateUrl: './staff-dialog.component.html',\n  styleUrls: ['./staff-dialog.component.css']\n})\nexport class StaffDialogComponent {\n\n    constructor(@Inject(MAT_DIALOG_DATA) public data: Staff) { }\n\n}\n","import { Injectable } from '@angular/core';\nimport {DomainService} from \"../../shared/domain/domain-service\";\nimport {Staff} from \"../staff\";\nimport {IDomainService} from \"../../shared/domain/idomain-service\";\nimport {ApiService} from \"../../shared/api.service\";\nimport {EntityDeserializerImpl} from \"../../shared/domain/entity-deserializer-impl\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StaffService extends DomainService<Staff> implements IDomainService<Staff> {\n\n  constructor(api: ApiService) {\n    super(api, new EntityDeserializerImpl(Staff));\n  }\n\n  resource(): string {\n    return \"staff\";\n  }\n\n\n\n}\n","import {DomainEntity} from \"../shared/domain/domain-entity\";\n\nexport class Staff extends DomainEntity {\n\n    firstName: string;\n    middleName: string;\n    lastName: string;\n    email: string;\n\n    resourceName(): string {\n        return 'staff';\n    }\n\n}\n","export const environment = {\n    production: false,\n    apiHost: '/api'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}